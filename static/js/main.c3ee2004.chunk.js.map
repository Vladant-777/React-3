{"version":3,"sources":["components/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["Timer","state","timing","props","timer","autostart","time","bar","componentDidMount","timerID","setInterval","count","timeChek","step","currentTime","currentBar","setState","showButtonTitle","createTimeString","str","checkTime","i","ms","sec","Math","floor","console","log","buttonClick","e","style","width","this","className","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QA6EeA,E,4MAzEbC,MAAQ,CACNC,OAAQ,EAAKC,MAAMC,MAAMC,UACzBC,KAAM,EAAKH,MAAMC,MAAME,KACvBC,IAAK,K,EAGPC,kBAAoB,WAClB,EAAKC,QAAUC,aAAY,kBAAM,EAAKC,UAAS,EAAKR,MAAMC,MAAMQ,W,EAGlED,MAAQ,WACN,IAAME,EAAO,KAAO,EAAKV,MAAMC,MAAME,KAAO,EAAKH,MAAMC,MAAMQ,UACvDE,EAAc,EAAKb,MAAMK,KACzBS,EAAa,EAAKd,MAAMM,KACJ,IAAtB,EAAKN,MAAMC,SACTY,EAAc,GAChB,EAAKE,SAAS,CAAEV,KAAMQ,EAAc,EAAKX,MAAMC,MAAMQ,WACrDG,EAAaF,EAAO,EAChB,EAAKG,SAAS,CAAET,IAAKQ,EAAaF,IAClC,EAAKG,SAAS,CAAET,IAAK,KAEzB,EAAKS,SAAS,CACZd,QAAQ,EACRI,KAAM,EAAKH,MAAMC,MAAME,KACvBC,IAAK,Q,EAMbU,gBAAkB,WAChB,OAA6B,IAAtB,EAAKhB,MAAMC,OAAkB,OAAS,S,EAG/CgB,iBAAmB,SAACZ,GAClB,IAAIa,EAAM,GACV,GAAIb,EAAO,EAAG,CACZ,IAAMc,EAAY,SAACC,GACjB,OAAOA,EAAI,GAAK,IAAMA,EAAIA,GAEtBC,EAAKF,EAAUd,EAAO,KACtBiB,EAAMH,EAAUI,KAAKC,MAAMnB,EAAO,MAExCa,EADYC,EAAUI,KAAKC,MAAMnB,EAAO,MAC5B,IAAMiB,EAAM,IAAMD,OAE9BH,EAAM,WAGR,OADAO,QAAQC,IAAIR,GACLA,G,EAGTS,YAAc,SAACC,GACb,EAAK5B,MAAMC,OACP,EAAKc,SAAS,CAAEd,QAAQ,IACxB,EAAKc,SAAS,CAAEd,QAAQ,K,4CAG9B,WACE,IAAM4B,EAAQ,CAAEC,MAAOC,KAAK/B,MAAMM,IAAM,KACxC,OACE,gCACE,8BACE,mBAAG0B,UAAU,aAAb,SAA2BD,KAAKd,iBAAiBc,KAAK/B,MAAMK,UAE9D,wBAAQ2B,UAAU,cAAcC,QAASF,KAAKJ,YAA9C,SACGI,KAAKf,oBAER,qBAAKgB,UAAU,cAAcH,MAAOA,W,GApExBK,aCqBLC,MArBf,WACE,OACE,gCACE,cAAC,EAAD,CACEhC,MAAO,CACLE,KAAM,IACNM,SAAU,GACVP,WAAW,KAGf,cAAC,EAAD,CACED,MAAO,CACLE,KAAM,IACNM,SAAU,IACVP,WAAW,SCLNgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c3ee2004.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './styles.css';\r\n\r\nclass Timer extends Component {\r\n  state = {\r\n    timing: this.props.timer.autostart,\r\n    time: this.props.timer.time,\r\n    bar: 100,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.timerID = setInterval(() => this.count(), this.props.timer.timeChek);\r\n  };\r\n\r\n  count = () => {\r\n    const step = 100 / (this.props.timer.time / this.props.timer.timeChek);\r\n    const currentTime = this.state.time;\r\n    const currentBar = this.state.bar;\r\n    if (this.state.timing === true) {\r\n      if (currentTime > 0) {\r\n        this.setState({ time: currentTime - this.props.timer.timeChek });\r\n        currentBar - step > 0\r\n          ? this.setState({ bar: currentBar - step })\r\n          : this.setState({ bar: 0 });\r\n      } else {\r\n        this.setState({\r\n          timing: false,\r\n          time: this.props.timer.time,\r\n          bar: 100,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  showButtonTitle = () => {\r\n    return this.state.timing === true ? 'Stop' : 'Start';\r\n  };\r\n\r\n  createTimeString = (time) => {\r\n    let str = '';\r\n    if (time > 0) {\r\n      const checkTime = (i) => {\r\n        return i < 10 ? '0' + i : i;\r\n      };\r\n      const ms = checkTime(time % 100);\r\n      const sec = checkTime(Math.floor(time / 1000));\r\n      const min = checkTime(Math.floor(time / 7000));\r\n      str = min + ':' + sec + ':' + ms;\r\n    } else {\r\n      str = '00:00:00';\r\n    }\r\n    console.log(str);\r\n    return str;\r\n  };\r\n\r\n  buttonClick = (e) => {\r\n    this.state.timing\r\n      ? this.setState({ timing: false })\r\n      : this.setState({ timing: true });\r\n  };\r\n\r\n  render() {\r\n    const style = { width: this.state.bar + '%' };\r\n    return (\r\n      <div>\r\n        <div>\r\n          <p className=\"timeString\">{this.createTimeString(this.state.time)}</p>\r\n        </div>\r\n        <button className=\"startButton\" onClick={this.buttonClick}>\r\n          {this.showButtonTitle()}\r\n        </button>\r\n        <div className=\"progressBar\" style={style}></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import './App.css';\nimport Timer from './components/Timer';\n\nfunction App() {\n  return (\n    <div>\n      <Timer\n        timer={{\n          time: 5000,\n          timeChek: 50,\n          autostart: false,\n        }}\n      />\n      <Timer\n        timer={{\n          time: 10000,\n          timeChek: 100,\n          autostart: true,\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}